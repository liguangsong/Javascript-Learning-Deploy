{
    "name": "算术运算符",
    "type": "算术运算符用于执行数字之间的算术运算.这章练习里有很多的算术运算符号.我们来看一遍它们都叫什么名字都有什么作用.",
    "point": 200,

    "simple_desc": "每一种编程语言都包含处理数字和进行数学计算的方法.javascript中的数学运算符为我们提供了基本的数学运算功能.",
    "desc": "- 数学成绩不好的人也不必担心,因为程序员所用到的数学运算技巧是很基础的.有时候数学运算的存在只是对代码流程控制的辅助.比如我们后面会接触的for循环结构:\n\r        for(var i = 0; i < 5; i++){\n\r            console.log(i);\n\r        }\n\r- 但更多的情况下我们用数学运算去处理代码中的真实数据.比如计算平均成绩:\n\r        var scores = [78, 80, 85, 94];\n\r        var average = (scores[0] + scores[1] + scores[2] + scores[3])/4;\n\r- 学习中我们使用过递加(++)和递减(--)运算符.如\n\r        var x,y=5,z;\n\r        x = ++y;  //6\n\r        z = --y;  //5\n\r- 但同样情况下\n\r        var x,y=5,z;\n\r        x = y++;  //5\n\r        z = y--;  //6\n\r- 这是由于 递加++ 递减-- 的位置对运算顺序是有影响的\n\r        x = y++;\n\r- 会先用y的原值(5)参与赋值运算,然后y值递加1(6).\n\r        x = ++y;\n\r- 会先将y值(5)递加1,然后(6)再参与赋值运算.",
    "step_desc": "- 按照编辑器中注释代码的提示完成任务.",
    "tips": "- 在 加减乘除( + - * \/) 中选择出一个符号 n,填入第二行的 400  400 之间,使得\n\r        400 n 400\n\r- 的结果大于10000.",
    "answer": "- 将第二行代码修改成:\n\r        var result = 400 * 400;",

    "project_dir": "/javascript_template",
    "specs_dir": "/specs",
    "files": [
        {
            "name": "challenge_3_1.js",
            "path": "/javascript_template/"
        }
    ],
    "spec": {
        "type":"terminal",
        "src":"browser",
        "name": "challenge_3_1.html",
        "path": "/javascript_template/"
    },
    "order": 0
}
